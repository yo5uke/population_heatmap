---
title: "人口ヒートマップ"
format: 
  dashboard: 
    theme: minty
    nav-buttons: 
      - icon: house-door-fill
        href: https://yo5uke.com/pages/software/
      - icon: github
        href: https://github.com/yo5uke/population_heatmap
lang: ja
server: shiny
---

```{r}
#| context: setup

# ==========================================
#         setup チャンク
# ==========================================
library(shiny)
library(shinyWidgets)
library(tidyverse)
library(sf)
library(leaflet)

# ---- データ前処理・年別リストをhelpersで生成 ----
source("helpers.R")
```

## {.sidebar}

```{r}
# ==========================================
#         サイドバー チャンク
# ==========================================
tagList(
  div(style = "margin-top: 20px;"), 

  helpText(
    tags$p("市町村ごとの人口や年齢別人口とその割合、人口の増加率を国勢調査ベースで可視化しています。"), 
    tags$p("以下のドロップダウンメニューから表示したい指標と年を選択してください。"), 
    tags$p("データが反映されるまで少し時間がかかる場合がありますが、少々お待ちください。")
  ), 

  selectInput("valueType", "値の種類", 
              choices = c("人口", "人口割合", "人口増加率"), 
              selected = "人口"), 

  selectInput("ageCategory", "年齢区分", 
              choices = c("総人口", "15歳未満人口", "15歳～64歳人口", "65歳以上人口"), 
              selected = "総人口"),

  sliderTextInput("year", "表示する年", 
                  choices = names(map_data_list), 
                  selected = max(names(map_data_list)), 
                  grid = TRUE), 

  div(
    style = "text-align: center; margin-top: 30px;", 
    div(style = "margin-bottom: 20px;", 
        actionButton("show_help", "🛈 用語説明を見る")
    ),
    actionButton("show_source", "📦 データ出典等")
  )
)
```

## Column

```{r}
leafletOutput("map")
```

```{r}
#| context: server

# ==========================================
#         サーバーロジック チャンク
# ==========================================

# ---- 用語説明モーダル ----
observeEvent(input$show_help, {
  showModal(modalDialog(
    title = "📝 用語説明", 
    HTML("
      <ul style='padding-left: 20px;'>
        <li><b>人口割合</b>：各年齢階層の人口 ÷ 当該年の総人口 × 100（%）</li>
        <li>
          <b>人口増加率</b>：<br>
          （当該年の人口 − 前回調査年の人口） ÷ 前回調査年の人口 × 100（%）<br>
          ※ 正の値：増加、負の値：減少
        </li>
      </ul>
    "), 
    easyClose = TRUE, 
    footer = modalButton("閉じる"), 
    size = "l"
  ))
})

# ---- データ出典モーダル ----
observeEvent(input$show_source, {
  showModal(modalDialog(
    title = "📦 データ出典・ライセンス・ソースコード", 
    HTML("
      <div style='line-height: 1.6; font-size: 95%;'>
        <h4>📊 データ出典</h4>
        <p>本アプリでは、以下のデータをもとに作成しています。</p>
        <ul style='padding-left: 20px;'>
          <li>
            総務省統計局『国勢調査』（1980～2020年）<br>
            <a href='https://www.e-stat.go.jp/stat-search?page=1&toukei=00200521&survey=%E5%9B%BD%E5%8B%A2%E8%AA%BF%E6%9F%BB' target='_blank'>
              e-Statの国勢調査ページ
            </a>
          </li>
          <li>
            国土数値情報ダウンロードサイト：<br>
            <a href='https://nlftp.mlit.go.jp/ksj/gml/datalist/KsjTmplt-N03-2024.html' target='_blank'>
              2024年1月1日時点の行政区域データ
            </a><br>
            ※ データ軽量化のため <code>rmapshaper::ms_simplify()</code> を使用して簡素化しています。
          </li>
        </ul>
        <h4>📝 ライセンス</h4>
        <p>
          このアプリは <strong>MITライセンス</strong> の下で公開されています。<br>
          自由に利用・改変が可能ですが、著作権表示とライセンス文の保持が必要です。
        </p>
        <h4>🔗 ソースコード</h4>
        <p>
          GitHub リポジトリはこちら：<br>
          <a href='https://github.com/yo5uke/population_heatmap' target='_blank'>
            https://github.com/yo5uke/population_heatmap
          </a>
        </p>
      </div>
    "), 
    easyClose = TRUE, 
    footer = modalButton("閉じる"), 
    size = "l"
  ))
})

# ---- サイドバーの選択肢を状況に応じてアップデート ----
observe({
  if (input$valueType == "人口") {
    updateSelectInput(session, "ageCategory", 
      choices = c("総人口", "15歳未満人口", "15～64歳人口", "65歳以上人口"), 
      selected = "総人口")
  } else if (input$valueType == "人口割合") {
    updateSelectInput(session, "ageCategory", 
      choices = c("15歳未満人口割合", "15～64歳人口割合", "65歳以上人口割合"), 
      selected = "15歳未満人口割合")
  } else if (input$valueType == "人口増加率") {
    updateSelectInput(session, "ageCategory", 
      choices = c("人口増加率", "15歳未満人口増加率", "15～64歳人口増加率", "65歳以上人口増加率"), 
      selected = "人口増加率")
  }
})

observeEvent(input$valueType, {
  if (input$valueType == "人口増加率") {
    updateSliderTextInput(session, "year",
      choices = names(map_data_list)[-1],  # 増加率は2期目以降
      selected = tail(names(map_data_list), 1)
    )
  } else {
    updateSliderTextInput(session, "year",
      choices = names(map_data_list),
      selected = tail(names(map_data_list), 1)
    )
  }
})

# ---- 選択指標の列名を定義 ----
selected_col <- reactive({
  switch(input$valueType,
    "人口" = c(
      "総人口"       = "population", 
      "15歳未満人口" = "pop_u15", 
      "15～64歳人口" = "pop_15to64", 
      "65歳以上人口" = "pop_o65"
    )[input$ageCategory],
    "人口割合" = c(
      "15歳未満人口割合" = "pct_u15", 
      "15～64歳人口割合" = "pct_15to64", 
      "65歳以上人口割合" = "pct_o65"
    )[input$ageCategory],
    "人口増加率" = c(
      "人口増加率"         = "pct_inc_pop", 
      "15歳未満人口増加率" = "pct_inc_u15", 
      "15～64歳人口増加率" = "pct_inc_15to64", 
      "65歳以上人口増加率" = "pct_inc_o65"
    )[input$ageCategory]
  )
})

# ---- 年・指標に応じてデータ抽出（reactive）----
filtered_gis <- reactive({
  req(input$year, selected_col())
  dat <- map_data_list[[as.character(input$year)]]
  col <- selected_col()
  dat$val <- dat[[col]]
  # 値のクリッピングやbin分割
  if (input$valueType == "人口") {
    dat$val_bin <- pmax(pmin(dat$val, 3000000), 0)
  } else if (input$valueType == "人口割合") {
    if (col == "pct_u15") {
      dat$val_bin <- pmax(pmin(dat$val, 30), 0)
    } else if (col == "pct_o65") {
      dat$val_bin <- pmax(pmin(dat$val, 40), 0)
    } else {
      dat$val_bin <- pmax(pmin(dat$val, 70), 0)
    }
  } else if (input$valueType == "人口増加率") {
    dat$val_bin <- pmax(pmin(dat$val, 15), -15)
  }
  dat
})

# ---- leaflet初期化 ----
output$map <- renderLeaflet({
  leaflet() |>
    addTiles() |>
    setView(lng = 138.36834, lat = 38.01827, zoom = 6)
})

# ---- メイン地図描画 ----
observe({
  dat <- filtered_gis()
  req(nrow(dat) > 0)

  # カラーパレットやブレイク
  if (input$valueType == "人口増加率") {
    breaks <- c(-20, -15, -10, -5, 0, 5, 10, 15, 20)
    pal <- colorBin("RdYlBu", domain = dat$val_bin, bins = breaks, reverse = TRUE)
  } else if (input$valueType == "人口割合") {
    pal <- colorBin("YlGnBu", domain = dat$val_bin, bins = pretty(dat$val_bin, 8))
  } else {
    breaks <- c(0, 10000, 50000, 100000, 200000, 300000, 500000, 1000000, 2000000, 3000000)
    pal <- colorBin("YlOrRd", domain = dat$val_bin, bins = breaks)
  }

  # 凡例タイトル
  legend_title <- switch(input$valueType,
    "人口" = paste0(input$ageCategory, "（万人）<br>", input$year, "年"),
    "人口割合" = paste0(input$ageCategory, "（%）<br>", input$year, "年"),
    "人口増加率" = paste0(input$ageCategory, "（%）<br>", input$year, "年")
  )

  # popupテキスト
  popup_text <- if (input$valueType == "人口") {
    if_else(
      is.na(dat$val),
      paste0(dat$name_muni, "<br>", input$year, "年国勢調査<br>データが欠損しています。"),
      paste0(dat$name_muni, "<br>", input$year, "年国勢調査<br>", format(dat$val, big.mark = ","), "人")
    )
  } else if (input$valueType == "人口割合") {
    if_else(
      is.na(dat$val),
      paste0(dat$name_muni, "<br>", input$year, "年国勢調査<br>割合：データが欠損しています。"),
      paste0(dat$name_muni, "<br>", input$year, "年国勢調査<br>割合：", dat$val, "%")
    )
  } else {
    if_else(
      is.na(dat$val),
      paste0(dat$name_muni, "<br>", input$year, "年国勢調査<br>前回国勢調査比：データが欠損しています。"),
      if_else(
        dat$val >= 0,
        paste0(dat$name_muni, "<br>", input$year, "年国勢調査<br>前回国勢調査比：+", dat$val, "%"),
        paste0(dat$name_muni, "<br>", input$year, "年国勢調査<br>前回国勢調査比：", dat$val, "%")
      )
    )
  }

  # leaflet更新
  leafletProxy("map", data = dat) |>
    clearShapes() |>
    clearControls() |>
    addPolygons(
      fillColor = ~pal(val_bin),
      color = "white",
      weight = 1,
      opacity = 1,
      fillOpacity = 0.7,
      label = dat$name_muni,
      popup = popup_text
    ) |>
    addLegend(
      pal = pal,
      values = dat$val_bin,
      title = legend_title,
      position = "bottomright"
    )
})
```
